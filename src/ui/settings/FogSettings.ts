import * as THREE from 'three';
import { Pane } from 'tweakpane';

export function setupFogSettings(pane: Pane, scene: THREE.Scene) {
  const folder = pane.addFolder({ title: 'üå´Ô∏è –¢—É–º–∞–Ω' });

  const fogParams = {
    –≤–∫–ª—é—á–µ–Ω: true,
    —Ç–∏–ø: '–õ–∏–Ω–µ–π–Ω—ã–π',
    —Ü–≤–µ—Ç: '#ffffff',
    –±–ª–∏–∂–Ω—è—è–ì—Ä–∞–Ω–∏—Ü–∞: 1,
    –¥–∞–ª—å–Ω—è—è–ì—Ä–∞–Ω–∏—Ü–∞: 100,
    –ø–ª–æ—Ç–Ω–æ—Å—Ç—å: 0.02, // –¥–ª—è —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ
    –∞–Ω–∏–º–∞—Ü–∏—è: false,
    –∞–º–ø–ª–∏—Ç—É–¥–∞: 1.0,
    —Å–∫–æ—Ä–æ—Å—Ç—å: 1.0,
    –ø—Ä–µ—Å–µ—Ç: '–ë–µ–∑ —Ç—É–º–∞–Ω–∞',
  };

  function applyFog() {
    if (!fogParams.–≤–∫–ª—é—á–µ–Ω) {
      scene.fog = null;
      return;
    }

    if (fogParams.—Ç–∏–ø === '–õ–∏–Ω–µ–π–Ω—ã–π') {
      scene.fog = new THREE.Fog(fogParams.—Ü–≤–µ—Ç, fogParams.–±–ª–∏–∂–Ω—è—è–ì—Ä–∞–Ω–∏—Ü–∞, fogParams.–¥–∞–ª—å–Ω—è—è–ì—Ä–∞–Ω–∏—Ü–∞);
    } else {
      scene.fog = new THREE.FogExp2(fogParams.—Ü–≤–µ—Ç, fogParams.–ø–ª–æ—Ç–Ω–æ—Å—Ç—å);
    }
  }

  applyFog();

  const clock = new THREE.Clock();
  function updateFog() {
    if (!fogParams.–∞–Ω–∏–º–∞—Ü–∏—è || !scene.fog) return;
    const t = performance.now() * 0.001 * fogParams.—Å–∫–æ—Ä–æ—Å—Ç—å;
    if (scene.fog instanceof THREE.Fog) {
      scene.fog.far = fogParams.–¥–∞–ª—å–Ω—è—è–ì—Ä–∞–Ω–∏—Ü–∞ + Math.sin(t) * 10 * fogParams.–∞–º–ø–ª–∏—Ç—É–¥–∞;
    } else if (scene.fog instanceof THREE.FogExp2) {
      (scene.fog as THREE.FogExp2).density = fogParams.–ø–ª–æ—Ç–Ω–æ—Å—Ç—å + Math.sin(t) * 0.005 * fogParams.–∞–º–ø–ª–∏—Ç—É–¥–∞;
    }
    requestAnimationFrame(updateFog);
  }

  // –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ç—É–º–∞–Ω–∞
  folder.addInput(fogParams, '–≤–∫–ª—é—á–µ–Ω', {
    label: '–í–∫–ª—é—á–µ–Ω'
  }).on('change', () => {
    applyFog();
  });

  // –¢–∏–ø —Ç—É–º–∞–Ω–∞
  folder.addInput(fogParams, '—Ç–∏–ø', {
    label: '–¢–∏–ø —Ç—É–º–∞–Ω–∞',
    options: {
      '–õ–∏–Ω–µ–π–Ω—ã–π': '–õ–∏–Ω–µ–π–Ω—ã–π',
      '–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π': '–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π'
    }
  }).on('change', () => {
    applyFog();
  });

  // –¶–≤–µ—Ç —Ç—É–º–∞–Ω–∞
  folder.addInput(fogParams, '—Ü–≤–µ—Ç', {
    view: 'color',
    label: '–¶–≤–µ—Ç —Ç—É–º–∞–Ω–∞'
  }).on('change', (ev) => {
    if (scene.fog) {
      if (scene.fog instanceof THREE.Fog) {
        scene.fog.color.set(ev.value);
      } else if (scene.fog instanceof THREE.FogExp2) {
        scene.fog.color.set(ev.value);
      }
    }
  });

  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ª–∏–Ω–µ–π–Ω–æ–≥–æ —Ç—É–º–∞–Ω–∞
  const linearFogFolder = folder.addFolder({
    title: '–õ–∏–Ω–µ–π–Ω—ã–π —Ç—É–º–∞–Ω',
    expanded: true,
  });

  linearFogFolder.addInput(fogParams, '–±–ª–∏–∂–Ω—è—è–ì—Ä–∞–Ω–∏—Ü–∞', {
    min: 0,
    max: 50,
    step: 1,
    label: '–ë–ª–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞'
  }).on('change', () => {
    if (scene.fog instanceof THREE.Fog) {
      scene.fog.near = fogParams.–±–ª–∏–∂–Ω—è—è–ì—Ä–∞–Ω–∏—Ü–∞;
    }
  });

  linearFogFolder.addInput(fogParams, '–¥–∞–ª—å–Ω—è—è–ì—Ä–∞–Ω–∏—Ü–∞', {
    min: 50,
    max: 500,
    step: 10,
    label: '–î–∞–ª—å–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞'
  }).on('change', () => {
    if (scene.fog instanceof THREE.Fog) {
      scene.fog.far = fogParams.–¥–∞–ª—å–Ω—è—è–ì—Ä–∞–Ω–∏—Ü–∞;
    }
  });

  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ç—É–º–∞–Ω–∞
  const expFogFolder = folder.addFolder({
    title: '–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ç—É–º–∞–Ω',
    expanded: true,
  });

  expFogFolder.addInput(fogParams, '–ø–ª–æ—Ç–Ω–æ—Å—Ç—å', {
    min: 0.001,
    max: 0.1,
    step: 0.001,
    label: '–ü–ª–æ—Ç–Ω–æ—Å—Ç—å'
  }).on('change', () => {
    if (scene.fog instanceof THREE.FogExp2) {
      scene.fog.density = fogParams.–ø–ª–æ—Ç–Ω–æ—Å—Ç—å;
    }
  });

  // –ê–Ω–∏–º–∞—Ü–∏—è —Ç—É–º–∞–Ω–∞
  const animationFolder = folder.addFolder({
    title: '–ê–Ω–∏–º–∞—Ü–∏—è —Ç—É–º–∞–Ω–∞',
    expanded: true,
  });

  animationFolder.addInput(fogParams, '–∞–Ω–∏–º–∞—Ü–∏—è', {
    label: '–í–∫–ª—é—á–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é'
  }).on('change', (ev) => {
    if (ev.value) {
      updateFog();
    }
  });

  animationFolder.addInput(fogParams, '–∞–º–ø–ª–∏—Ç—É–¥–∞', {
    min: 0,
    max: 5,
    step: 0.1,
    label: '–ê–º–ø–ª–∏—Ç—É–¥–∞'
  });

  animationFolder.addInput(fogParams, '—Å–∫–æ—Ä–æ—Å—Ç—å', {
    min: 0.1,
    max: 5,
    step: 0.1,
    label: '–°–∫–æ—Ä–æ—Å—Ç—å'
  });

  // –ü—Ä–µ—Å–µ—Ç—ã —Ç—É–º–∞–Ω–∞
  folder.addInput(fogParams, '–ø—Ä–µ—Å–µ—Ç', {
    label: '–ü—Ä–µ—Å–µ—Ç',
    options: {
      '–ë–µ–∑ —Ç—É–º–∞–Ω–∞': '–ë–µ–∑ —Ç—É–º–∞–Ω–∞',
      '–õ–µ–≥–∫–∞—è –¥—ã–º–∫–∞': '–õ–µ–≥–∫–∞—è –¥—ã–º–∫–∞',
      '–ì—É—Å—Ç–æ–π —Ç—É–º–∞–Ω': '–ì—É—Å—Ç–æ–π —Ç—É–º–∞–Ω',
      '–£—Ç—Ä–µ–Ω–Ω–∏–π —Ç—É–º–∞–Ω': '–£—Ç—Ä–µ–Ω–Ω–∏–π —Ç—É–º–∞–Ω',
      '–ù–æ—á–Ω–æ–π —Ç—É–º–∞–Ω': '–ù–æ—á–Ω–æ–π —Ç—É–º–∞–Ω'
    }
  }).on('change', (ev) => {
    switch (ev.value) {
      case '–ë–µ–∑ —Ç—É–º–∞–Ω–∞':
        fogParams.–≤–∫–ª—é—á–µ–Ω = false;
        break;
      case '–õ–µ–≥–∫–∞—è –¥—ã–º–∫–∞':
        fogParams.–≤–∫–ª—é—á–µ–Ω = true;
        fogParams.—Ç–∏–ø = '–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π';
        fogParams.—Ü–≤–µ—Ç = '#e6f0ff';
        fogParams.–ø–ª–æ—Ç–Ω–æ—Å—Ç—å = 0.005;
        break;
      case '–ì—É—Å—Ç–æ–π —Ç—É–º–∞–Ω':
        fogParams.–≤–∫–ª—é—á–µ–Ω = true;
        fogParams.—Ç–∏–ø = '–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π';
        fogParams.—Ü–≤–µ—Ç = '#c8c8c8';
        fogParams.–ø–ª–æ—Ç–Ω–æ—Å—Ç—å = 0.03;
        break;
      case '–£—Ç—Ä–µ–Ω–Ω–∏–π —Ç—É–º–∞–Ω':
        fogParams.–≤–∫–ª—é—á–µ–Ω = true;
        fogParams.—Ç–∏–ø = '–õ–∏–Ω–µ–π–Ω—ã–π';
        fogParams.—Ü–≤–µ—Ç = '#e6e6fa';
        fogParams.–±–ª–∏–∂–Ω—è—è–ì—Ä–∞–Ω–∏—Ü–∞ = 10;
        fogParams.–¥–∞–ª—å–Ω—è—è–ì—Ä–∞–Ω–∏—Ü–∞ = 100;
        break;
      case '–ù–æ—á–Ω–æ–π —Ç—É–º–∞–Ω':
        fogParams.–≤–∫–ª—é—á–µ–Ω = true;
        fogParams.—Ç–∏–ø = '–≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π';
        fogParams.—Ü–≤–µ—Ç = '#151530';
        fogParams.–ø–ª–æ—Ç–Ω–æ—Å—Ç—å = 0.015;
        break;
    }
    applyFog();
  });
}
